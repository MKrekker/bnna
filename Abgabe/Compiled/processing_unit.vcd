$date
  Thu Sep 16 17:07:22 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var reg 8 # data[7:0] $end
$var reg 8 $ weight[7:0] $end
$var reg 16 % treshold[15:0] $end
$var reg 1 & output1 $end
$var reg 1 ' output2 $end
$var reg 1 ( output_comp $end
$var reg 8 ) popcount_in[7:0] $end
$var reg 4 * popcount_out[3:0] $end
$var reg 16 + cache_out[15:0] $end
$var reg 1 , tmp_out2 $end
$var reg 1 - tmp_out2_1 $end
$scope module gen(0) $end
$scope module xnori $end
$var reg 1 . data $end
$var reg 1 / weight $end
$var reg 1 0 output1 $end
$var reg 1 1 xnor_o $end
$upscope $end
$upscope $end
$scope module gen(1) $end
$scope module xnori $end
$var reg 1 2 data $end
$var reg 1 3 weight $end
$var reg 1 4 output1 $end
$var reg 1 5 xnor_o $end
$upscope $end
$upscope $end
$scope module gen(2) $end
$scope module xnori $end
$var reg 1 6 data $end
$var reg 1 7 weight $end
$var reg 1 8 output1 $end
$var reg 1 9 xnor_o $end
$upscope $end
$upscope $end
$scope module gen(3) $end
$scope module xnori $end
$var reg 1 : data $end
$var reg 1 ; weight $end
$var reg 1 < output1 $end
$var reg 1 = xnor_o $end
$upscope $end
$upscope $end
$scope module gen(4) $end
$scope module xnori $end
$var reg 1 > data $end
$var reg 1 ? weight $end
$var reg 1 @ output1 $end
$var reg 1 A xnor_o $end
$upscope $end
$upscope $end
$scope module gen(5) $end
$scope module xnori $end
$var reg 1 B data $end
$var reg 1 C weight $end
$var reg 1 D output1 $end
$var reg 1 E xnor_o $end
$upscope $end
$upscope $end
$scope module gen(6) $end
$scope module xnori $end
$var reg 1 F data $end
$var reg 1 G weight $end
$var reg 1 H output1 $end
$var reg 1 I xnor_o $end
$upscope $end
$upscope $end
$scope module gen(7) $end
$scope module xnori $end
$var reg 1 J data $end
$var reg 1 K weight $end
$var reg 1 L output1 $end
$var reg 1 M xnor_o $end
$upscope $end
$upscope $end
$scope module pop_count1 $end
$var reg 8 N input1[7:0] $end
$var reg 4 O output1[3:0] $end
$upscope $end
$scope module cache1 $end
$var reg 1 P reset $end
$var reg 1 Q clk $end
$var reg 4 R input1[3:0] $end
$var reg 16 S output1[15:0] $end
$var reg 1 T ready $end
$var reg 16 U cache_register[15:0] $end
$var reg 16 V out1[15:0] $end
$upscope $end
$scope module comparator1 $end
$var reg 16 W a[15:0] $end
$var reg 16 X b[15:0] $end
$var reg 1 Y a_comp_b $end
$upscope $end
$enddefinitions $end
#0
U!
U"
bUUUUUUUU #
bUUUUUUUU $
bUUUUUUUUUUUUUUUU %
0&
U'
-(
bUUUUUUUU )
b1XXX *
bUUUUUUUUUUUUUUUU +
U,
U-
U.
U/
U0
U1
U2
U3
U4
U5
U6
U7
U8
U9
U:
U;
U<
U=
U>
U?
U@
UA
UB
UC
UD
UE
UF
UG
UH
UI
UJ
UK
UL
UM
bUUUUUUUU N
b1XXX O
UP
UQ
b1XXX R
bUUUUUUUUUUUUUUUU S
UT
bUUUUUUUUUUUUUUUU U
bUUUUUUUUUUUUUUUU V
bUUUUUUUUUUUUUUUU W
bUUUUUUUUUUUUUUUU X
-Y
